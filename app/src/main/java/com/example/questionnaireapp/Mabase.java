package com.example.questionnaireapp;import android.content.ContentValues;import android.content.Context;import android.database.Cursor;import android.database.sqlite.SQLiteDatabase;import android.database.sqlite.SQLiteOpenHelper;import android.widget.Toast;import androidx.annotation.Nullable;public class Mabase extends SQLiteOpenHelper {    private Context context;    private static final String DATABASE_NAME="projet2.db";    private static final int DATABASE_VERSION=1;    private static final String TABLE_NAME="question";    private static final String COLUMN_ID="id";    private static final String COLUMN_TEXT="titre";    private static final String COLUMN_Description="descr";    public Mabase(@Nullable Context context)    {        super(context, DATABASE_NAME,null, DATABASE_VERSION);        this.context=context;    }    @Override    public void onCreate(SQLiteDatabase sqLiteDatabase) {        String query = "CREATE TABLE question ( id INTEGER PRIMARY KEY AUTOINCREMENT,titre TEXT,descr TEXT);";        String query2 = "CREATE TABLE reponse( idr INTEGER PRIMARY KEY AUTOINCREMENT,reponse TEXT,idq INTEGER,FOREIGN KEY(idq) REFERENCES question(idq));";       // String query="CREATE TABLE + TABLE_NAME + "("+ COLUMN_ID+"INTEGER PRIMARY KEY AUTOINCREMENT,"+ COLUMN_TEXT+"TEXT,"+COLUMN_Description+"TEXT);";        sqLiteDatabase.execSQL(query);        sqLiteDatabase.execSQL(query2);    }    @Override    public void onUpgrade(SQLiteDatabase sqLiteDatabase, int i, int i1) {        sqLiteDatabase.execSQL("DROP TABLE IF EXISTS question");        sqLiteDatabase.execSQL("DROP TABLE IF EXISTS reponse");        onCreate(sqLiteDatabase);    }    void addquestion(String titre,String descr){        SQLiteDatabase db=this.getWritableDatabase();        ContentValues cv=new ContentValues();        cv.put(COLUMN_TEXT,titre);        cv.put(COLUMN_Description,descr);       long res=db.insert(TABLE_NAME,null,cv);        if(res==-1){            Toast.makeText( context,"Failed", Toast.LENGTH_SHORT).show();        }else {            Toast.makeText(context, "Question Ajoutee", Toast.LENGTH_SHORT).show();        }    }    void addreponse(String reponse,String idq){        SQLiteDatabase db=this.getWritableDatabase();        ContentValues cv=new ContentValues();        cv.put("reponse",reponse);        cv.put("idq",idq);        long res=db.insert("reponse",null,cv);        if(res==-1){            Toast.makeText(context, "Failed", Toast.LENGTH_SHORT).show();        }        else{            Toast.makeText(context, "Reponse Ajoutee", Toast.LENGTH_SHORT).show();        }    }    Cursor readAllData(){        String query ="SELECT * FROM "+TABLE_NAME;        //String query ="SELECT * FROM question ";        SQLiteDatabase db=this.getReadableDatabase();        Cursor cursor=null;        if(db!=null){            cursor=db.rawQuery(query,null);        }        return cursor;    }    Cursor readreponses(String idq){        String query="SELECT * FROM reponse where idq="+idq;        SQLiteDatabase db=this.getReadableDatabase();        Cursor cursor=null;        if(db!=null){            cursor= db.rawQuery(query,null);        }        return cursor;    }}